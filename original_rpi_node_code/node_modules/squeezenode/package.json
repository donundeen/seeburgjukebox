{
  "name": "squeezenode",
  "author": {
    "name": "Piotr Raczynski",
    "email": "pio[dot]raczynski[at]gmail[dot]com"
  },
  "version": "0.0.2",
  "description": "Node.js wrapper library for squeezebox CLI/json interface with Spotify/SoundCloud support",
  "main": "server.js",
  "keywords": [
    "squeezebox",
    "logitechmediaserver",
    "spotify",
    "soundcloud",
    "jsonrpc",
    "remote",
    "smarthome",
    "home automation"
  ],
  "dependencies": {
    "jayson": ">= 1.0.11"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/piotrraczynski/squeezenode.git"
  },
  "scripts": {
    "start": "node server.js"
  },
  "readme": "squeezenode\r\n===========\r\n\r\nSqueezenode is a Node.js wrapper library for Logitech Media Server (Squeezebox) CLI/json interface with Spotify/SoundCloud support\r\n\r\n\r\nHow To Use\r\n----------\r\n\r\nTo use this library, make sure Squeezebox (Logitech Media Server) server is up and running.\r\n\r\nNote that default port for LMS server is port 9000 (you can change it under settings.\r\n\r\nTo start using te library instantiate the SqueezeServer class, eg.\r\n\r\n    var SqueezeServer = require('squeezenode');\r\n    var squeeze = new SqueezeServer('http://localhost', 9000);\r\n    //subscribe for the 'register' event to ensure player registration is complete\r\n\r\n    squeeze.on('register', function(){\r\n        //you're ready to use the api, eg.\r\n        squeeze.getPlayers( function(reply) {\r\n                console.dir(reply);\r\n        });\r\n    });\r\n\r\nAll api requests returns reply in a callback. Each reply contains 'ok' bool variable which is true if request\r\nhas been processed properly, false otherwise and 'result' property with the reqeust result.\r\n\r\n\r\n",
  "readmeFilename": "README.md",
  "_id": "squeezenode@0.0.2",
  "dist": {
    "shasum": "256be636e7370764dc37be00e8f6025042b6ca16"
  },
  "_from": "squeezenode@",
  "_resolved": "https://registry.npmjs.org/squeezenode/-/squeezenode-0.0.2.tgz"
}
